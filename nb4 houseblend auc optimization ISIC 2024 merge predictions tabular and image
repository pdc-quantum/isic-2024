{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22918,"status":"ok","timestamp":1725205249098,"user":{"displayName":"Pierre Decoodt","userId":"11089793044290653285"},"user_tz":-120},"id":"NNAh_6uYMU_o","outputId":"19410fd3-ddf1-4cc3-a79c-da5dd3fa0a56"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# for colab\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XhOoVlU2jSLW"},"outputs":[],"source":["path_isic_data = '/content/drive/MyDrive/Data/ISIC-2018/'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"95757b01"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bc51033d"},"outputs":[],"source":["from scipy.optimize import minimize\n","from sklearn.metrics import precision_recall_fscore_support, accuracy_score\n","from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.metrics import roc_curve, roc_auc_score, precision_recall_curve, average_precision_score, auc\n","from sklearn.model_selection import  RepeatedStratifiedKFold"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"b8209719-6e59-491f-9cc6-deb6adb7f757"},"outputs":[],"source":["%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tUFHq9G_Y2u7"},"outputs":[],"source":["df_my_mix_tabular= pd.read_csv(path_isic_data + \"predictions_of_2024_dataset_notebook4.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OMi3js9FKDGy"},"outputs":[],"source":["df_my_mix_tabular.rename(columns={'target': 'preds'}, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FGxhSY5zZ2vJ"},"outputs":[],"source":["df_my_mix_tabular['target'] = 0 #dummy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ma4V4WGDar2V"},"outputs":[],"source":["df_my_mix_image= pd.read_csv(path_isic_data + \"houseblend-rep4-output-zinneke-picture-train-d169/houseblend-rep4-output-zinneke-picture-train-d169/df_2024_after prediction.csv\")"]},{"cell_type":"markdown","metadata":{"id":"RDjWoGm6KyJ9"},"source":[]},{"cell_type":"markdown","metadata":{"id":"b0ZsYhVMKx0B"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2esNOZlg0qKw"},"outputs":[],"source":["def pAUC_aboveTPR(y_score, y_true, max_fpr):\n","\n","    # using sklearn.metric functions: (1) roc_curve and (2) auc\n","    fpr, tpr, _ = roc_curve(y_true, y_score, sample_weight=None)\n","    if max_fpr is None or max_fpr == 1:\n","        return auc(fpr, tpr)\n","    if max_fpr <= 0 or max_fpr > 1:\n","        raise ValueError(\"Expected min_tpr in range [0, 1), got: %r\" % min_tpr)\n","    # Add a single point at max_fpr by linear interpolation\n","    stop = np.searchsorted(fpr, max_fpr, \"right\")\n","    x_interp = [fpr[stop - 1], fpr[stop]]\n","    y_interp = [tpr[stop - 1], tpr[stop]]\n","    tpr = np.append(tpr[:stop], np.interp(max_fpr, x_interp, y_interp))\n","    fpr = np.append(fpr[:stop], max_fpr)\n","    #print(tpr, fpr)\n","    partial_auc = auc(fpr, tpr)\n","    #print(\"partial_auc_scaled\", partial_auc, \"\\n\")\n","    #plt.plot(fpr,tpr,label=name + \", pAUC-aboveTPR =\" + str(partial_auc))\n","    #plt.legend()\n","    #plt.show()\n","    return partial_auc\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Ala68RChF6x"},"outputs":[],"source":["min_tpr =  0.80 # 1 for AUC\n","max_fpr =  abs(1-min_tpr) # None for AUC"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"elapsed":895,"status":"ok","timestamp":1725205270015,"user":{"displayName":"Pierre Decoodt","userId":"11089793044290653285"},"user_tz":-120},"id":"W1j7_bTzYrgG","outputId":"0c7f9e7c-9ee1-4508-b0fb-246d23752146"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        isic_id   preds_x  target_x  target_y   preds_y\n","0  ISIC_0015670  0.001034         0         0  0.000009\n","1  ISIC_0015845  0.355560         0         0  0.201210\n","2  ISIC_0015864  0.000420         0         0  0.001512"],"text/html":["\n","  <div id=\"df-ee65684e-d54b-41d1-8bd1-e7e0979c406a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>isic_id</th>\n","      <th>preds_x</th>\n","      <th>target_x</th>\n","      <th>target_y</th>\n","      <th>preds_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ISIC_0015670</td>\n","      <td>0.001034</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.000009</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ISIC_0015845</td>\n","      <td>0.355560</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.201210</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ISIC_0015864</td>\n","      <td>0.000420</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.001512</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee65684e-d54b-41d1-8bd1-e7e0979c406a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ee65684e-d54b-41d1-8bd1-e7e0979c406a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ee65684e-d54b-41d1-8bd1-e7e0979c406a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f34b7449-d7be-49f2-b338-7a55b613bb62\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f34b7449-d7be-49f2-b338-7a55b613bb62')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f34b7449-d7be-49f2-b338-7a55b613bb62 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"merged"}},"metadata":{},"execution_count":12}],"source":["merged = pd.merge(df_my_mix_tabular, df_my_mix_image,\n","                                               on = 'isic_id')\n","merged.head(3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kYzrsICdHeDe"},"outputs":[],"source":["formula_dic = {\"linear\":2, \"linear-intercept\":3, \"linear-correl\":3, \"linear-correl-intercept\":4,\n","                \"linear-quadratic\": 4, \"linear-quadratic-intercept\":5, \"linear-correl-quadratic\":5,\n","                \"linear-correl-quadratic-intercept\": 6}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QxCL_KRpC13I"},"outputs":[],"source":["def predict_formula(x0, y1, y2, formula):\n","  if formula == \"linear\" :\n","    y = x0[0]*y1 + x0[1]*y2\n","  elif formula == \"linear-intercept\" :\n","    y = x0[0]*y1 + x0[1]*y2 + x0[2]\n","  elif formula == \"linear-correl\" :\n","    y = x0[0]*y1 + x0[1]*y2 + x0[2]*y1*y2\n","  elif formula == \"linear-correl-intercept\":\n","    y = x0[0]*y1 + x0[1]*y2 + x0[2]*y1*y2 + x0[3]\n","  elif formula == \"linear-quadratic\" :\n","    y = x0[0]*y1+x0[1]*y2+x0[2]*y1*y1+x0[3]*y2*y2\n","  elif formula == \"linear-quadratic-intercept\" :\n","    y = x0[0]*y1+x0[1]*y2+x0[2]*y1*y1+x0[3]*y2*y2+ x0[4]\n","  elif formula == \"linear-correl-quadratic\" :\n","    y = x0[0]*y1+x0[1]*y2+x0[2]*y1*y2+x0[3]*y1*y1+x0[4]*y2*y2\n","  elif formula == \"linear-correl-quadratic-intercept\" :\n","    y = x0[0]*y1+x0[1]*y2+x0[2]*y1*y2+x0[3]*y1*y1+x0[4]*y2*y2 + x0[5]\n","\n","  return y"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xY5Md-PhC1K-"},"outputs":[],"source":["def fun(x0, y1, y2, y_true, max_fpr, formula = \"linear\"):\n","  y =  predict_formula(x0, y1, y2, formula)\n","  pauc =  pAUC_aboveTPR(y, y_true, max_fpr)\n","  return - pauc"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nTPeYNF8YT1I"},"outputs":[],"source":["rskf = RepeatedStratifiedKFold(n_splits=2, n_repeats=5, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZatbMNL8UhkS"},"outputs":[],"source":["def pauc_maximizer(merged, formula_name, formula_int, method):\n","  res_list = []\n","  fun_list = []\n","  pauc_list = []\n","  for i, (train_index, test_index) in enumerate(rskf.split(merged.drop(\"target_y\", axis=1), merged.target_y)):\n","    #print(f\"Fold {i}:\")\n","    #print(f\"  Train: index={train_index[0:5]}\")\n","    #print(f\"  Test:  index={test_index[0:5]}\")\n","    merged_train = merged.loc[train_index]\n","    merged_test = merged.loc[test_index]\n","    res = minimize(fun, formula_int*[0],\n","                args = (merged_train[\"preds_x\"],\n","                        merged_train[\"preds_y\"],\n","                        merged_train[\"target_y\"], max_fpr, formula_name),\n","              options={'disp': False},\n","              method = method #'nelder-mead' 'BFGS' were less performing\n","                          )\n","    res_list.append(res.x)\n","    fun_list.append(res.fun)\n","    predicts = predict_formula(res.x, merged_test[\"preds_x\"],\n","                        merged_test[\"preds_y\"], formula=formula_name)\n","    pauc_list.append(pAUC_aboveTPR(predicts,merged_test[\"target_y\"], max_fpr))\n","  return res_list, fun_list , pauc_list\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61wXRhSnQ3IQ","executionInfo":{"status":"ok","timestamp":1725206473076,"user_tz":-120,"elapsed":1203067,"user":{"displayName":"Pierre Decoodt","userId":"11089793044290653285"}},"outputId":"7e910cc4-8e9c-4c6b-cc4b-fc50b12d1e90"},"outputs":[{"output_type":"stream","name":"stdout","text":["train:  0.19990159 test: 0.19989783 linear\n","[2.58655107 5.90875569]\n","train:  0.19990159 test: 0.19989783 linear-intercept\n","[2.58655107 5.90875569 0.        ]\n","train:  0.19990164 test: 0.1998981 linear-correl\n","[ 2.58859318  5.97591538 -0.09366209]\n","train:  0.19990164 test: 0.1998981 linear-correl-intercept\n","[ 2.58859318  5.97591538 -0.09366209  0.        ]\n","train:  0.1999025 test: 0.19989853 linear-quadratic\n","[ 2.6509221   5.96474724 -0.55061459 -0.33050326]\n","train:  0.1999025 test: 0.19989853 linear-quadratic-intercept\n","[ 2.6509221   5.96474724 -0.55061459 -0.33050326  0.        ]\n","train:  0.19990256 test: 0.19989861 linear-correl-quadratic\n","[ 2.72939257  5.96769851 -0.10079853 -0.5497803  -0.30914102]\n","train:  0.19990256 test: 0.19989861 linear-correl-quadratic-intercept\n","[ 2.72939257  5.96769851 -0.10079853 -0.5497803  -0.30914102  0.        ]\n","\n","best result for powell\n","train:  0.19990256 test: 0.19989861 linear-correl-quadratic\n","[ 2.72939257  5.96769851 -0.10079853 -0.5497803  -0.30914102]\n","\n","train:  0.19989604 test: 0.19989327 linear\n","[2.86990818e-05 4.37072681e-05]\n","train:  0.19989604 test: 0.19989327 linear-intercept\n","[2.86990818e-05 4.37072681e-05 0.00000000e+00]\n","train:  0.19988629 test: 0.19988726 linear-correl\n","[2.30026155e-05 3.61096382e-05 2.95945741e-05]\n","train:  0.19988629 test: 0.19988726 linear-correl-intercept\n","[2.30026155e-05 3.61096382e-05 2.95945741e-05 0.00000000e+00]\n","train:  0.1998993 test: 0.19989642 linear-quadratic\n","[2.38032031e-05 2.58639298e-05 2.37810860e-05 2.90192690e-05]\n","train:  0.1998993 test: 0.19989642 linear-quadratic-intercept\n","[2.38032031e-05 2.58639298e-05 2.37810860e-05 2.90192690e-05\n"," 0.00000000e+00]\n","train:  0.19989476 test: 0.1998958 linear-correl-quadratic\n","[2.18990301e-05 2.18835937e-05 2.21469738e-05 2.17960646e-05\n"," 2.68533686e-05]\n","train:  0.19989476 test: 0.1998958 linear-correl-quadratic-intercept\n","[2.18990301e-05 2.18835937e-05 2.21469738e-05 2.17960646e-05\n"," 2.68533686e-05 0.00000000e+00]\n","\n","best result for BFGS\n","train:  0.1998993 test: 0.19989642 linear-quadratic\n","[2.38032031e-05 2.58639298e-05 2.37810860e-05 2.90192690e-05]\n","\n"]}],"source":["rnd = 8\n","verbose = True\n","\n","for method in (\"powell\", \"BFGS\"): # 'nelder-mead' no more used\n","  best_test_pauc = 0.0\n","  for index, item in enumerate(formula_dic.items()) :\n","    res_list, fun_list, pauc_list = pauc_maximizer(merged, item[0], item[1],method)\n","    if verbose:\n","      print(\"train: \", -np.round(np.mean(fun_list),rnd), \"test:\", np.round(np.mean(pauc_list),rnd), item[0])\n","      print(np.mean(res_list, axis = 0))\n","    if np.mean(pauc_list) > best_test_pauc:\n","      best_test_pauc = np.mean(pauc_list)\n","      best_pauc_list =  pauc_list\n","      best_formula =  item[0]\n","      best_res_list = res_list\n","      best_fun_list = fun_list\n","  print()\n","  print(\"best result for \" + method)\n","  print(\"train: \", -np.round(np.mean(best_fun_list),rnd), \"test:\", np.round(np.mean(best_pauc_list),rnd), best_formula)\n","  print(np.mean(best_res_list, axis = 0))\n","  print()"]}],"metadata":{"colab":{"provenance":[{"file_id":"1NIwlbkqlTsmHFsIceyQa3g4DHejC3ho2","timestamp":1725137537708},{"file_id":"1Qq-biKAxRbFlZOu81ANBiJQ3F2y9wuB4","timestamp":1725024437017},{"file_id":"1Us2J7d2eLqpTtDMK3RjmNDJ-ibZ_W2z5","timestamp":1724654492379},{"file_id":"1G6GtEYDxwqheLoMDlE9Ez2mD7KgtD80o","timestamp":1724486178009},{"file_id":"1owIk5M8K1XMJBffvOE5SZTErXm2WsLKW","timestamp":1723984928601},{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/isic-2024-merge-predictions-tabular-and-image-addc93ce-9ac4-44fd-bea1-e424ffb8b01a.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240813/auto/storage/goog4_request&X-Goog-Date=20240813T065943Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=1b98628cbba7cff1a41a51bec7daa2b4bdf1fc99b23f8b316596366b16ae3afae3e1404bc822c321c6d781fa2c5ee1ed4b3164e85b4522a761573303aba7bf8bad07da1562e20d2d60e4c2a469956e9c60c14064329d1c31807349d6d63f9b4b03fe989bfa9f5e1d1c770028cde6179f04e9f67a2cb6ef997d686fa3b7cec018a4842adc91f5fc828e2c049a7d1b851c0c30350c1ceec070f565db568783f8f95e211894f12a48522f31e9ab90ddfa9899766c70be8fdeb7fa063f45863ef818af7ed025fd1380ca466b2517e16544843d95d1204cd9d09cd23dcc28e1e646a4b2a6a0fd48c693712f1bd83e5d250342b0c2d1574092cb5c923eee14ca6f7792","timestamp":1723532392038},{"file_id":"1L7bFE4Pv9oSFeCZJcIeGGoeazPnDinbn","timestamp":1721572044952},{"file_id":"1cdrE_Zcfx7oB5vuGTqW_9HPoyqMIW4Ma","timestamp":1721228580417}]},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"databundleVersionId":9094797,"sourceId":63056,"sourceType":"competition"},{"datasetId":5532077,"sourceId":9157208,"sourceType":"datasetVersion"},{"datasetId":5534936,"sourceId":9161276,"sourceType":"datasetVersion"}],"dockerImageVersionId":30747,"isGpuEnabled":true,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"latex_envs":{"LaTeX_envs_menu_present":true,"autoclose":false,"autocomplete":true,"bibliofile":"biblio.bib","cite_by":"apalike","current_citInitial":1,"eqLabelWithNumbers":true,"eqNumInitial":1,"hotkeys":{"equation":"Ctrl-E","itemize":"Ctrl-I"},"labels_anchors":false,"latex_user_defs":false,"report_style_numbering":false,"user_envs_cfg":false},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{"height":"781px","left":"50px","top":"111.141px","width":"196.797px"},"toc_section_display":true,"toc_window_display":true}},"nbformat":4,"nbformat_minor":0}